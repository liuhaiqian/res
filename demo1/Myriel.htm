<!DOCTYPE html>
<!-- saved from url=(0040)http://bl.ocks.org/mbostock/raw/4062045/ -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta charset="utf-8">
<style>
.node {
  stroke: #fff;
  stroke-width: 1px;
}

.link {
  stroke: #999;
  stroke-opacity: .6;
}
.nodetext{
  font-size: 12px;
  color: #f00;
}

</style>
</head><body>
<script src="./Myriel_files/d3.v3.min.js"></script>
<script>

var width = 1200,
    height = 800;

var color = d3.scale.category20();
//声明力导布局
var force = d3.layout.force()
    .charge(-1000)        //电荷数 引力还是排斥力 
    .linkDistance(100)    //直线长度
    .friction(0.3)        //摩擦系数
    .size([width, height]);//宽高

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("result.json", function(error, graph) {
  force
      .nodes(graph.nodes)
      .links(graph.links)
      .start();
  //连线
  var link = svg.selectAll(".link")
      .data(graph.links)
    .enter().append("line")
      .attr("class", "link")
      .style("stroke-width", 4)
      .style("cursor","pointer");
  //节点圆圈
  var node = svg.selectAll(".node")
      .data(graph.nodes)
    .enter().append("circle")
      .attr("class", "node")
      .attr("r", 15)
      .style("fill", function(d) { return color(d.group); })
      .call(force.drag);

    node.append("title")
      .text(function(d) { return d.sname; });
  //节点文本
  var nodes_text = svg.selectAll(".nodetext")
            .data(graph.nodes)
            .enter()
            .append("text")
            .attr("class","nodetext")
            .style("fill","#555")
            .attr("dx",0)
            .attr("dy",0)
            .text(function(d){
              return d.name;
            });
  force.on("tick", function() {
    //刷新线的位置
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });
    //刷新节点的位置
    node.attr("cx", function(d) { return d.x; })
        .attr("cy", function(d) { return d.y; });
    //刷新节点文字的位置
    nodes_text.attr("x", function(d) { return d.x; })
        .attr("y", function(d) { return d.y; });
  });
});

</script>
</body></html>